// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RolePlayHelper.DAL.Database;

#nullable disable

namespace RolePlayHelper.DAL.Migrations
{
    [DbContext(typeof(RolePlayHelperContext))]
    [Migration("20251015082005_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RolePlayHelper.DL.Entities.Race", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatModifierId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_Race");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("StatModifierId")
                        .IsUnique();

                    b.ToTable("Race", (string)null);
                });

            modelBuilder.Entity("RolePlayHelper.DL.Entities.StatModifier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ArmorClass")
                        .HasColumnType("int");

                    b.Property<int?>("CHA")
                        .HasColumnType("int");

                    b.Property<int?>("CON")
                        .HasColumnType("int");

                    b.Property<int?>("DEX")
                        .HasColumnType("int");

                    b.Property<int?>("HitModifier")
                        .HasColumnType("int");

                    b.Property<int?>("INT")
                        .HasColumnType("int");

                    b.Property<int?>("Initiative")
                        .HasColumnType("int");

                    b.Property<int?>("MVT")
                        .HasColumnType("int");

                    b.Property<int?>("MaxHP")
                        .HasColumnType("int");

                    b.Property<int?>("STR")
                        .HasColumnType("int");

                    b.Property<int?>("SpellAttack")
                        .HasColumnType("int");

                    b.Property<int?>("SpellSave")
                        .HasColumnType("int");

                    b.Property<int?>("WIS")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_StatModifier");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.ToTable("StatModifier", (string)null);
                });

            modelBuilder.Entity("RolePlayHelper.DL.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User_", (string)null);
                });

            modelBuilder.Entity("RolePlayHelper.DL.Entities.Race", b =>
                {
                    b.HasOne("RolePlayHelper.DL.Entities.StatModifier", "StatModifier")
                        .WithOne("Race")
                        .HasForeignKey("RolePlayHelper.DL.Entities.Race", "StatModifierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatModifier");
                });

            modelBuilder.Entity("RolePlayHelper.DL.Entities.StatModifier", b =>
                {
                    b.Navigation("Race");
                });
#pragma warning restore 612, 618
        }
    }
}
